generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedIndexes"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  us_no       String     @id @default(cuid())
  us_id       String     @db.VarChar(100)
  us_pwd      String?    @db.VarChar(255)
  us_type     UserType   @default(EMAIL)
  us_sns_id   String?    @db.VarChar(255)
  us_nick     String     @unique @db.VarChar(20)
  us_birthday DateTime?
  us_age      Decimal?   @db.Decimal(3, 0)
  us_gender   Gender?
  taste_type  Decimal?   @db.Decimal(2, 0)
  taste_data  Json?
  us_profile  String?    @db.VarChar(512)
  us_token    String?    @db.VarChar(255)
  us_role     UserRole   @default(USER)
  us_status   UserStatus @default(ENABLED)
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  disabled_at DateTime?
  qnas        Qna[]
  userShops   UserShop[]
  userWines   UserWine[]

  @@index([taste_type])
  @@index([us_gender])
  @@index([us_id])
  @@index([us_role])
  @@index([us_sns_id])
  @@index([us_status])
  @@index([us_type])
  @@map("tb_user")
}

model Shop {
  sh_no        String       @id @default(cuid())
  sh_name      String       @db.VarChar(100)
  sh_name_uni  String
  sh_address   String       @db.VarChar(200)
  sh_tell      String?      @db.VarChar(100)
  sh_url       String?
  sh_longitude Float?
  sh_latitude  Float?
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  sh_dong      String?
  sh_category  ShopCategory @default(ETC)
  sh_img       String?
  sh_time      Json?
  dong         Dong?        @relation(fields: [sh_dong], references: [do_no])
  userShops    UserShop[]
  userWines    UserWine[]

  @@index([sh_latitude])
  @@index([sh_longitude])
  @@index([sh_name])
  @@map("tb_shop")
}

model UserShop {
  us_no       String
  sh_no       String
  uh_bookmark Boolean  @default(false)
  uh_wine_cnt Int      @default(0)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  shop        Shop     @relation(fields: [sh_no], references: [sh_no])
  user        User     @relation(fields: [us_no], references: [us_no])

  @@id([us_no, sh_no])
  @@map("tb_user_shop")
}

model Wine {
  wn_no       String     @id @default(cuid())
  wn_brand    String     @db.VarChar(200)
  wn_name     String     @db.VarChar(200)
  wn_name_uni String
  wn_name_en  String     @db.VarChar(200)
  wn_country  String     @db.VarChar(100)
  wn_nation   String?    @db.VarChar(200)
  wn_kind     String?
  wn_alcohol  String?    @db.VarChar(100)
  wn_img      String?
  wn_source   String?    @db.VarChar(50)
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  wn_category String?
  userWines   UserWine[]

  @@index([wn_name])
  @@map("tb_wine")
}

model UserWine {
  uw_no        String    @id @default(cuid())
  us_no        String
  sh_no        String
  wn_no        String?
  uw_name      String    @db.VarChar(100)
  uw_country   String    @db.VarChar(100)
  uw_vintage   String    @db.VarChar(10)
  uw_img       String?
  purchased_at DateTime
  created_at   DateTime  @default(now())
  updated_at   DateTime  @updatedAt
  disabled_at  DateTime?
  uw_disabled  Boolean   @default(false)
  shop         Shop      @relation(fields: [sh_no], references: [sh_no])
  user         User      @relation(fields: [us_no], references: [us_no])
  wine         Wine?     @relation(fields: [wn_no], references: [wn_no])

  @@index([sh_no])
  @@index([us_no])
  @@index([wn_no])
  @@map("tb_user_wine")
}

model Qna {
  qa_no      String    @id @default(cuid())
  us_no      String
  qa_email   String    @db.VarChar(100)
  qa_title   String    @db.VarChar(100)
  qa_content String
  qa_reply   String?
  qa_status  QnaStatus @default(OPEN)
  created_at DateTime  @default(now())
  closed_at  DateTime?
  user       User      @relation(fields: [us_no], references: [us_no])

  @@index([qa_status])
  @@index([us_no])
  @@map("tb_qna")
}

model Dong {
  do_no      String   @id @default(cuid())
  do_full    String   @db.VarChar(100)
  do_si      String   @db.VarChar(100)
  do_gu      String   @db.VarChar(100)
  do_dong    String   @db.VarChar(100)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  shop       Shop[]

  @@map("tb_dong")
}

model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

enum ShopCategory {
  PRIVATE
  CHAIN
  CONVENIENCE
  SUPERMARKET
  WAREHOUSE
  DEPARTMENT
  ETC
}

enum QnaStatus {
  OPEN
  CLOSED
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ENABLED
  DISABLED
}

enum UserType {
  EMAIL
  NAVER
  KAKAO
  GOOGLE
  APPLE
  FACEBOOK
}

enum Gender {
  MALE
  FEMALE
}
